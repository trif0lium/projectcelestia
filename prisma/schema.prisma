generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator nestgraphql {
  provider = "node node_modules/prisma-nestjs-graphql"
  output   = "../libs/graphql/src/lib"
}

model Character {
  id             String                   @id @default(cuid())
  name           String
  vision         String
  weapon         String
  affiliation    String
  rarity         Int
  constellations CharacterConstellation[]
  passiveTalents CharacterPassiveTalent[]
}

model CharacterConstellation {
  id          String    @id @default(cuid())
  characterId String
  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)

  name        String
  unlock      String
  description String
  level       Int

  @@index([characterId])
}

model CharacterPassiveTalent {
  id          String    @id @default(cuid())
  characterId String
  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)

  name        String
  unlock      String
  description String
  level       Int

  @@index([characterId])
}

model CharacterSkillTalent {
  id          String    @id @default(cuid())
  characterId String
  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)

  name        String
  unlock      String
  description String
  type        CharacterSkillTalentType @default(NORMAL_ATTACK)

  @@index([characterId])
}

enum CharacterSkillTalentType {
  NORMAL_ATTACK
  ELEMENTAL_SKILL
  ELEMENTAL_BURST
}
